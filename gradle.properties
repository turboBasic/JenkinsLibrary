junitVersion = 5.9.2
jenkinsPipelineUnitVersion = 1.17
spockVersion = 1.3-groovy-2.4

# Set version as close as possible to the version of Jenkins in production environment
# Last version of Jenkins which can run on top of Java 8: 2.346.1
# Newer versions require at least Java 11
jenkinsVersion = 2.361.4

groovyVersion = 2.4.21

# Maven GAV coordinates of Jenkins plugins required in tests' runtime.
# They should match our jenkinsVersion, appropriate version matching of plugins to
# Jenkins core version can be discovered at https://stats.jenkins.io/pluginversions/${pluginName}.
# Usually you should use version of plugin which is reported in the biggest number of installations
# of Jenkins of your Jenkins version.
# Eg. the following XPath selector returns cells with non-empty number of installations of
# some plugin for Jenkins version 2.361.4:
# (//tr[th = '2.361.4']/td)[position() < last() and . != '']
jenkinsPluginsVersions = \
    org.jenkins-ci.plugins:credentials-binding                      523.vd859a_4b_122e6 \
    org.jenkins-ci.plugins:durable-task                             503.v57154d18d478 \
    org.jenkins-ci.plugins:job-dsl                                  1.82 \
    org.jenkins-ci.plugins:pipeline-utility-steps                   2.14.0 \
    org.jenkins-ci.plugins:script-security                          1228.vd93135a_2fb_25 \
    org.jenkins-ci.plugins:ssh-agent                                295.v9ca_a_1c7cc3a_a_ \
    org.jenkins-ci.plugins:ssh-credentials                          305.v8f4381501156 \
    org.jenkins-ci.plugins:structs                                  324.va_f5d6774f3a_d \
    org.jenkins-ci.plugins.workflow:workflow-api                    1200.v8005c684b_a_c6 \
    org.jenkins-ci.plugins.workflow:workflow-basic-steps            994.vd57e3ca_46d24 \
    org.jenkins-ci.plugins.workflow:workflow-cps                    3536.vb_8a_6628079d5 \
    org.jenkins-ci.plugins.workflow:workflow-durable-task-step      1217.v38306d8fa_b_5c \
    org.jenkins-ci.plugins.workflow:workflow-step-api               639.v6eca_cd8c04a_a_ \


testLoggerPluginVersion = 4.0.0
# Gradle log levels: ERROR->QUIET->WARN->LIFECYCLE->INFO->DEBUG
testlogger.logLevel = lifecycle

# If true, testNonRegression() writes actual callStack to the file
pipeline.stack.write = false

gradleVersion = 8.5
org.gradle.parallel = true
org.gradle.console = auto
org.gradle.warning.mode = all
